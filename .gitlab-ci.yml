stages:
  - build
  - buildreport
  - test
  - prodbuild
  - dockerpush
  - deploy


cache: 
  key: package
  paths:
    - node_modules/

build:
  stage: build
  image: node:10-alpine
  when: manual
  before_script:
    - apk add --update bash
    - apk add --update git && rm -rf /tmp/* /var/cache/apk/*
  script:
    - npm install
    
test_ci_push:
  stage: buildreport
  allow_failure: false
  only:
    - master
  script:
    - git clone http://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/madhusudhan2/angularunittest.git &> /dev/null
    - cd angularunittest
    - echo "This is a test" > test.dat
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git log --pretty=format:%h,%an,%ae,%s > text.csv
    #- git add --all
    #- git commit -m "GitLab Runner Push"
    #- git push http://${YOUR_USERNAME}:${PERSONAL_ACCESS_TOKEN}@gitlab.mycompany.home/developers/benchmarks.git HEAD:master
    #- cd ..
  artifacts:
    paths:
      - text.csv/
    

Unittest:
  stage: test
  image: trion/ng-cli-karma:6.2.1
  before_script:
    - echo
  script:
    - ng test
  artifacts:
    paths:
      - coverage/


Codecoverge:
  stage: test
  image: trion/ng-cli-karma:6.2.1
  before_script:
    - echo
  script:
    - ng test --code-coverage
  artifacts:
    paths:
      - coverage/


prodbuild:
  stage: prodbuild
  image: trion/ng-cli-karma
  when: manual
  before_script:
    - echo
  script:
    - rm ./package-lock.json
    - ./node_modules/@angular/cli/bin/ng build --progress false --prod --base-href plus1-stage.surge.sh
  artifacts:
   expire_in: 1 day
   paths:
    - dist/
   
dockerpush:
  stage: dockerpush
  image: docker:latest
  only:
    - "master"
  services:
    - docker:dind
  when: manual    
  before_script:
    - docker version
    - "docker info"
    - "docker login -u $CI_REGISTRY_USER -p $CI_BUILD_TOKEN $CI_REGISTRY"
  script:
    - echo  
    #- "docker build -t ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest  ."
    #- "docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest"
    - "docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest || true"
    - "docker build --cache-from ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest --tag ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_SHA} --tag ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest ."
    - "docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:${CI_COMMIT_SHA}"
    - "docker push ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest"
  after_script:
    - "docker logout ${CI_REGISTRY}"
    
    
deploy:
  stage: deploy
  image: wayarmy/alpine-kubectl:latest
  only:
    - "master"
  environment: production
  when: manual
  before_script:
    - echo
    #- kubectl create secret docker-registry gmailgitlabmadhu --docker-server=registry.gitlab.com --docker-username=kankurtemadhusudhan1993@gmail.com --docker-password=mohangitlab93 --docker-email=kankurtemadhusudhan1993@gmail.com
  script:
    - echo
    #- kubectl
    #- VERSION="${CI_COMMIT_TAG:-none}" envsubst < manifast.ymal | kubectl apply -f -
    #- sed -i "s/__VERSION__/${CI_COMMIT_SHA}/" manifast.yml
    #- kubectl apply -f manifast.yml
